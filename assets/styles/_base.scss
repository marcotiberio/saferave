/**
* 0.0 Root
*
* Top level styles every element should inherit.
*/

@include font-face('MonumentGrotesk', 'MonumentGrotesk-Regular', '400', 'regular');
@include font-face('MonumentGroteskMono', 'MonumentGrotesk-Mono', '400', 'regular');
@include font-face('Tungsten', 'Tungsten', '400', 'regular');

html {
  background-color: $white;
  box-sizing: border-box;
  color: $color-text;
  font-family: 'MonumentGrotesk', Helvetica, Arial, sans-serif;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  height: 100%;
  line-height: 1.2;
  -ms-overflow-style: -ms-autohiding-scrollbar;
  overflow-wrap: break-word;
  word-wrap: break-word;


  *,
  *::before,
  *::after {
    box-sizing: inherit;
  }
}

body {
  overflow-x: hidden;
}

/**
* 1.0 Typography
*
* Styling all likely used content flow elements.
*/

#{$heading-selectors} {
  color: $color-headline;
  font-weight: 700;
  line-height: 1.2;
  margin-bottom: 0.9rem;
  margin-top: 0;

  a,
  a:hover,
  a:focus {
    color: $color-headline;
    text-decoration: underline;
  }
}

h1,
.h1 {
  font-family: 'Tungsten', Helvetica, Arial, sans-serif;
  font-size: 2.25rem;
  font-weight: 400;
  letter-spacing: 1px;
  line-height: 1.175;
  margin-bottom: 1.5rem;
  padding-top: 2rem;
  text-transform: uppercase;

  @media (min-width: $breakpoint-mobile-horizontal) {
    font-size: 3.125rem;
    line-height: 0.8;
  }
}

.h1Outline {
  color: $salmon;
  font-family: 'Tungsten', Helvetica, Arial, sans-serif;
  font-size: 2.25rem;
  font-weight: 400;
  letter-spacing: 1px;
  line-height: 1.175;
  margin-bottom: 1.5rem;
  padding-top: 2rem;
  -webkit-text-stroke-color: $black;
  -webkit-text-stroke-width: 1px;
  text-transform: uppercase;


  @media (min-width: $breakpoint-mobile-horizontal) {
    font-size: 3.125rem;
    line-height: 0.8;
  }
}

.h1Question {
  font-size: 2.25rem;
  font-weight: 400;
  letter-spacing: -1px;
  line-height: 1.175;
  margin-bottom: 1.5rem;
  padding-top: 2rem;

  @media (min-width: $breakpoint-mobile-horizontal) {
    font-size: 2.5rem;
  }
}

h2,
.h2 {
  font-size: 1.5rem;
  line-height: 1.25;
  padding-top: 1rem;

  @media (min-width: $breakpoint-mobile-horizontal) {
    font-size: 2.5rem;
  }
}

h3,
.h3 {
  font-size: 1.125rem;
  padding-top: 1rem;

  @media (min-width: $breakpoint-mobile-horizontal) {
    font-size: 1.25rem;
  }
}

h4,
.h4 {
  font-size: 1rem;
  padding-top: 0.5rem;

  @media (min-width: $breakpoint-mobile-horizontal) {
    font-size: 1.125rem;
  }
}

h5,
.h5 {
  font-size: 1rem;
  font-weight: 400;
  padding-top: 0.5rem;
}

h6,
.h6 {
  font-size: 1rem;
  padding-top: 0.5rem;
}

a {
  color: $black;
  line-height: 1.175;
  text-decoration: none;
  transition: color 0.2s ease-out;

  &:hover,
  &:focus {
    text-decoration: underline;
  }
}

p,
.paragraph,
table,
figure {
  line-height: 1.175;
  margin: 0 0 1.2rem;
}

hr {
  background-color: $black;
  border: 0;
  display: block;
  height: 1px;
  margin: 2.4rem 0;
}

img {
  display: block;
  max-width: 100%;
  width: 100%;
}

figcaption {
  font-size: 0.875rem;
  margin-top: 0.625rem;
}

code {
  background-color: rgba(0, 0, 0, 0.05);
  display: inline-block;
  padding: 0 0.3rem;
}

blockquote,
.blockquote {
  border-left: 4px solid $color-accent;
  font-size: 1.125rem;
  font-style: italic;
  font-weight: 400;
  letter-spacing: 0.16px;
  line-height: 1.55;
  margin: 2.4rem auto;
  max-width: 28rem;
  padding: 0.8rem 1.5rem;

  p:last-child {
    margin-bottom: 0;
  }
}

/**
* 1.1 Lists & Tables
*
* Default and custom styled list and table elements.
*/

ul,
ol {
  margin: 0 0 1.2rem;
  padding-left: 1.5rem;

  ul,
  ol {
    margin-bottom: 0;
  }
}

/* Icon Lists */

.iconList {
  list-style: none;
  padding: 0;

  li {
    margin-bottom: 0.5rem;
    padding-left: 1.5rem;
    position: relative;

    &::before {
      background-size: contain;
      content: '';
      display: block;
      height: 1rem;
      left: 0;
      position: absolute;
      top: 0.25rem;
      width: 1rem;
    }
  }

  &--checkCircle {
    li::before {
      background-image: url('../assets/icons/check-circle.svg');
    }
  }
}

/* Tables */

table {
  border-collapse: collapse;
  border-spacing: 0;
  max-width: 100%;
}

td,
th {
  padding: 1.25rem;
  text-align: inherit;
  vertical-align: top;
}

thead {
  th {
    border-bottom: 2px solid $color-accent;
    color: $color-headline;
    padding-bottom: 10px;
    vertical-align: bottom;
    white-space: nowrap;
  }
}

tr:nth-child(even) {
  background-color: $white-light;
}

/**
* 1.2 Buttons
*
* Global button elements, including reset on standard button element.
*/

button {
  appearance: none;
  background-color: transparent;
  border: 0;
  color: inherit;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
  padding: 0;
  text-align: inherit;
}

.button {
  appearance: none;
  background-color: $color-accent;
  border: 1px solid $color-accent;
  border-radius: 4px;
  color: $white;
  cursor: pointer;
  display: inline-block;
  font-family: 'MonumentGroteskMono', Helvetica, Arial, sans-serif;
  font-weight: 400;
  line-height: inherit;
  padding: 1rem 1.5rem;
  text-align: center;
  text-decoration: none;
  text-transform: uppercase;
  transition: background-color 0.2s ease, border-color 0.2s ease, color 0.2s ease;
  user-select: none;

  &:disabled,
  &--disabled {
    cursor: default;
    opacity: 0.65;
    pointer-events: none;
  }

  &--ghost {
    background-color: transparent;
    border-color: $color-accent;
    color: $color-accent;

    &:hover,
    &:focus {
      background-color: transparent;
      border-color: $white-dark;
      color: $white-dark;
    }
  }

  &--small {
    font-size: 0.8rem;
    padding: 0.5rem 1rem;
  }

  &--link {
    background-color: transparent;
    border: 0;
    color: $black;
    padding: 0;
    position: relative;
    text-transform: none;
    transition: color 0.2s ease-out;

    &:hover,
    &:focus {
      background-color: transparent;
      color: $white-dark;

      &::after {
        background-position: right center;
      }
    }
  }
}

/* Pills */

.pill {
  background-color: $white-dark;
  border-radius: 1rem;
  color: $white;
  display: inline-block;
  font-size: 0.8rem;
  max-width: 100%;
  overflow: hidden;
  padding: 0.125rem 1rem;
  text-decoration: none;
  text-overflow: ellipsis;
  vertical-align: middle;
  white-space: nowrap;

  &:hover,
  &:focus {
    color: $white;
  }
}

/* Icons */

.feather {
  color: $color-accent;
  position: relative;
  top: -2px;
  vertical-align: middle;
}

/**
* 1.3 Forms
*
* Global form elements, including structering wrapper elements.
*/

form {
  margin: 0;
}

fieldset {
  border: 0;
  margin: 0 0 1.5rem;
  padding: 0;

  *:last-child {
    margin-bottom: 0;
  }

  input,
  select,
  textarea {
    margin: 0 0 1.875rem;
  }
}

legend {
  display: inline-block;
  font-size: 1.25rem;
  font-weight: 700;
  margin-bottom: 0.9375rem;
}

label {
  display: inline-block;
  font-weight: 700;
  line-height: 1.5;
  margin-bottom: 0.5rem;
}

#{$input-selectors} {
  appearance: none;
  background-color: $white;
  border: 1px solid rgba(11, 16, 12, 1);
  border-radius: 0;
  color: $color-headline;
  font-family: inherit;
  font-size: inherit;
  min-height: 50px;
}

input,
select,
textarea {
  margin: 0 0 1rem;
  padding: 10px 20px;
}

textarea {
  min-height: 150px;
  padding: 20px;
  resize: vertical;
  width: 100%;
}

select {
  $color-text-rgb: red($color-contrast), green($color-contrast),
    blue($color-contrast);

  background-image: url("data:image/svg+xml;charset=utf8,%3Csvg width='32' height='32' xmlns='http://www.w3.org/2000/svg'%3E%3Cpolyline fill='none' stroke='rgb(#{$color-text-rgb})' stroke-width='5'  points='2,9 16,25 30,9 '/%3E%3C/svg%3E");
  background-position: calc(100% - 18px) center;
  background-repeat: no-repeat;
  background-size: 9px;
  line-height: 1.75;
  padding-right: 45px;

  &::-ms-expand {
    display: none;
  }
}

[type='checkbox'],
[type='radio'] {
  opacity: 0;
  pointer-events: none;
  position: absolute;
  width: 1px;

  &,
  &:hover,
  &:focus {
    border-color: $color-border;
    outline: 0;
  }

  +label {
    display: inline-block;
    padding-left: 1.875rem;
    position: relative;
    width: 100%;

    &::before {
      background-color: #fff;
      border: 1px solid $color-border;
      border-radius: 2px;
      content: '';
      display: block;
      height: 15px;
      left: 0;
      margin: 0;
      padding: 0;
      position: absolute;
      top: 4px;
      transition: border-color 0.2s ease, background-color 0.2s ease;
      width: 15px;
    }
  }

  &:checked {
    +label::before {
      background-color: $color-accent;
      border-color: $color-accent;
      box-shadow: inset 0 0 0 2px #fff;
    }
  }
}

[type='radio'] {
  +label::before {
    border-radius: 50%;
  }
}

/**
* 2.0 Helpers
*
* Global layout classes for a consistent appearance.
*/

/* Header */

.mainHeader {
  display: flex;
  flex-flow: row wrap;
  height: 75px;
  left: 0;
  position: fixed;
  top: 0;
  width: 100vw;
  z-index: 1000;

  .safeRave {
    display: none;

    @media (min-width: $breakpoint-desktop) {
      align-items: center;
      background-color: $salmon;
      border-bottom: 1px solid $black;
      border-right: 1px solid $black;
      display: flex;
      font-family: 'Tungsten', Helvetica, Arial, sans-serif;
      height: 75px;
      justify-content: center;
      margin: 0;
      padding: 0;
      width: 50%;
    }
  }

  .progressBar {
    display: flex;
    left: 100px;
    position: fixed;
    top: 20px;

    span {
      color: $black;
    }
  }
}

.home,
.page-template-default {
  .progressBar {
    display: none;
  }
}

.single-event_privacy {
  .progressBar span:nth-child(1) {
    display: block;
  }

  .progressBar span:nth-child(2),
  .progressBar span:nth-child(3),
  .progressBar span:nth-child(4) {
    display: none;
  }
}

.single-event_type {
  .progressBar span:nth-child(2) {
    display: block;
  }

  .progressBar span:nth-child(1),
  .progressBar span:nth-child(3),
  .progressBar span:nth-child(4) {
    display: none;
  }
}

.single-event_condition {
  .progressBar span:nth-child(3) {
    display: block;
  }

  .progressBar span:nth-child(1),
  .progressBar span:nth-child(2),
  .progressBar span:nth-child(4) {
    display: none;
  }
}

.single-event_capacity {
  .progressBar span:nth-child(4) {
    display: block;
  }

  .progressBar span:nth-child(1),
  .progressBar span:nth-child(2),
  .progressBar span:nth-child(3) {
    display: none;
  }
}

/* Header */

.pageWrapper {
  display: flex;
  flex-direction: column;
  height: 100%;
  margin: 0 auto;

  .admin-bar & {
    padding-top: 46px;

    @media (min-width: 782px) {
      padding-top: 32px;
    }
  }
}

.mainContent {
  display: flex;
  flex: 1 0 auto;
  flex-flow: column wrap;
  margin-top: 75px;

  @media (min-width: $breakpoint-desktop) {
    flex-flow: row wrap;
  }

  .flyntComponent:nth-child(1) {
    border-right: 1px solid $black;
  }

  .post {
    .post-custom-main {
      width: 100vw;

      &-content {
        display: flex;
        flex: 1 0 auto;
        flex-flow: column wrap;

        @media (min-width: $breakpoint-desktop) {
          flex-flow: row wrap;
        }
      }
    }
  }
}

.flyntComponent {
  position: relative;
}

.componentSpacing {
  margin: $component-spacing-mobile 0;

  @media (min-width: $breakpoint-tablet) {
    margin: $component-spacing-tablet 0;
  }

  @media (min-width: $breakpoint-desktop) {
    margin: $component-spacing-desktop 0;
  }

  &[class*='theme'] {
    margin: 0;
    padding: $component-spacing-mobile 0;

    @media (min-width: $breakpoint-tablet) {
      padding: $component-spacing-tablet 0;
    }

    @media (min-width: $breakpoint-desktop) {
      padding: $component-spacing-desktop 0;
    }
  }
}

.centerMaxWidthContainer {
  @include center;

  @media (min-width: $breakpoint-tablet) {
    @include center($padding: $container-padding-mobile);
  }

  @media (min-width: $breakpoint-desktop) {
    @include center($padding: $container-padding-mobile);
  }

  &-half {
    @include center;
    margin: 0;
    max-width: $content-max-width;
  }
}

.fullWidthContainer {
  margin: 0;
  padding: 0;
  width: 100%;
}

.centerContentMaxWidth {
  margin: 0 auto;
  max-width: $content-max-width;
}

.preContent {
  @include reset-content-margins;
  margin-bottom: $container-padding-mobile;
  margin-top: $container-padding-mobile;
}

.postContent {
  @include reset-content-margins;
  margin: 32px auto 0;
  max-width: $content-max-width;
  text-align: center;

  @media (min-width: $breakpoint-tablet) {
    margin-top: $container-padding-tablet;
  }

  @media (min-width: $breakpoint-desktop) {
    margin-top: $container-padding-desktop;
  }
}

.scrollableTableWrapper {
  -webkit-overflow-scrolling: touch;
  overflow-x: auto;
}

/* Class for text that should only be visible to screen readers */

.visuallyHidden {
  clip: rect(1px, 1px, 1px, 1px);
  height: 1px !important;
  overflow: hidden;
  position: absolute !important;
  white-space: nowrap;
  width: 1px !important;
}

/* Box Helpers */

.boxPadding {
  @include reset-content-margins;
  padding: 20px;

  @media (min-width: $breakpoint-tablet-horizontal) {
    padding: 30px;
  }
}

.boxShadow {
  box-shadow: 0 1px 26px 0 rgba(0, 0, 0, 0.06);
}

/* Custom styling for single post layouts */

.post {
  &-main {
    .componentSpacing {
      margin: $component-spacing-mobile/2 0;

      @media (min-width: $breakpoint-tablet) {
        margin: $component-spacing-tablet/2 0;
      }

      @media (min-width: $breakpoint-desktop) {
        margin: $component-spacing-desktop/2 0;
      }

      &[class*='theme'] {
        margin: 0;
        padding: $component-spacing-mobile/2 0;

        @media (min-width: $breakpoint-tablet) {
          padding: $component-spacing-tablet/2 0;
        }

        @media (min-width: $breakpoint-desktop) {
          padding: $component-spacing-desktop/2 0;
        }
      }
    }

    >.componentSpacing {
      &:first-child {
        margin-top: 0;
      }

      &:last-child {
        margin-bottom: 0;
      }
    }
  }
}

/* Skip link behaviour */

.skipLink {
  position: fixed;
  top: -100px;
  z-index: 999;

  &:focus {
    top: 0;
  }
}

/**
* 3.0 Themes
*
* Color themes for backgrounds and content elements.
*/

.themeLight {
  background-color: $white-light;
}

.themeDark {
  background-color: $white-dark;

  &,
  #{$heading-selectors} {
    color: $white;
  }

  .button {
    &:hover,
    &:focus {
      background-color: $white-hero;
      border-color: $white-hero;
      color: $white;
    }

    &--ghost {
      &:hover,
      &:focus {
        background-color: transparent;
        border-color: $white-hero;
        color: $white-hero;
      }
    }

    &--link {
      &:hover,
      &:focus {
        background-color: transparent;
        color: $white;

        &::before {
          background-color: $white;
        }
      }

      &::after {
        $color-accent-rgb: red($color-accent), green($color-accent), blue($color-accent);
        $white-rgb: red($white), green($white), blue($white);
      }
    }
  }

  .pill {
    background-color: $white-hero;
  }
}

.themeHero {
  background-color: $white-hero;

  &,
  #{$heading-selectors},
  a,
  .feather {
    color: $white;
  }

  a:hover,
  a:focus {
    color: $white-dark;
  }

  .button {
    &--ghost {
      background-color: transparent;

      &:hover,
      &:focus {
        background-color: transparent;
        border-color: $white;
        color: $white;
      }
    }

    &--link {
      background-color: transparent;
      color: $white;

      &::before {
        background-color: $white;
      }

      &:hover,
      &:focus {
        background-color: transparent;
      }

      &::after {
        $white-dark-rgb: red($white-dark), green($white-dark), blue($white-dark);
        $white-rgb: red($white), green($white), blue($white);
      }
    }
  }

  .pill {
    &:hover,
    &:focus {
      color: $white;
    }
  }
}

.themeReset {
  background-color: $white;
  color: $color-text;

  #{$heading-selectors} {
    color: $color-headline;

    a,
    a:hover,
    a:focus {
      color: $color-headline;
      text-decoration: none;
    }
  }

  a,
  .feather {
    color: $color-accent;
  }

  a:hover,
  a:focus {
    color: darken($color-accent, 10%);
  }

  .button {
    background-color: $color-accent;
    border-color: $color-accent;
    color: $white;

    &:hover,
    &:focus {
      border-color: $white-dark;
      color: $white;
    }

    &--ghost {
      background-color: transparent;
      border-color: $color-accent;
      color: $color-accent;

      &:hover,
      &:focus {
        background-color: transparent;
      }
    }

    &--link {
      background-color: transparent;
      color: $color-accent;

      &:hover,
      &:focus {
        background-color: transparent;

        
      }

      &::before {
        background-color: $color-accent;
      }

      &::after {
        $color-accent-rgb: red($color-accent), green($color-accent), blue($color-accent);
        $white-dark-rgb: red($white-dark), green($white-dark), blue($white-dark);
      }
    }
  }

  .pill {
    color: $white;
  }
}

/**
* 4.0 Custom Classes
*/

.hideThis {
  display: none;
}
